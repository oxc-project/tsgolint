
// Code generated by tools/gen_shims. DO NOT EDIT.

package project

import "github.com/microsoft/typescript-go/internal/core"
import "github.com/microsoft/typescript-go/internal/lsp/lsproto"
import "github.com/microsoft/typescript-go/internal/project"
import "github.com/microsoft/typescript-go/internal/project/logging"
import "github.com/microsoft/typescript-go/internal/tspath"
import "github.com/microsoft/typescript-go/internal/vfs"
import _ "unsafe"

type APISnapshotRequest = project.APISnapshotRequest
type ATAStateChange = project.ATAStateChange
type Client = project.Client
type ConfigFileEntry = project.ConfigFileEntry
type ConfigFileRegistry = project.ConfigFileRegistry
type ConfigFileRegistryBuilder = project.ConfigFileRegistryBuilder
type CreateProgramResult = project.CreateProgramResult
type DiskFile = project.DiskFile
type ExtendedConfigCache = project.ExtendedConfigCache
type FileChange = project.FileChange
type FileChangeKind = project.FileChangeKind
const FileChangeKindChange = project.FileChangeKindChange
const FileChangeKindClose = project.FileChangeKindClose
const FileChangeKindOpen = project.FileChangeKindOpen
const FileChangeKindSave = project.FileChangeKindSave
const FileChangeKindWatchChange = project.FileChangeKindWatchChange
const FileChangeKindWatchCreate = project.FileChangeKindWatchCreate
const FileChangeKindWatchDelete = project.FileChangeKindWatchDelete
type FileChangeSummary = project.FileChangeSummary
type FileContent = project.FileContent
type FileHandle = project.FileHandle
type FileSource = project.FileSource
type Kind = project.Kind
const KindConfigured = project.KindConfigured
const KindInferred = project.KindInferred
//go:linkname NewConfigFileEntry github.com/microsoft/typescript-go/internal/project.NewConfigFileEntry
func NewConfigFileEntry(fileName string) *project.ConfigFileEntry
//go:linkname NewConfigFileRegistryBuilder github.com/microsoft/typescript-go/internal/project.NewConfigFileRegistryBuilder
func NewConfigFileRegistryBuilder(fs *project.SnapshotFSBuilder, oldConfigFileRegistry *project.ConfigFileRegistry, extendedConfigCache *project.ExtendedConfigCache, sessionOptions *project.SessionOptions, logger *logging.LogTree) *project.ConfigFileRegistryBuilder
//go:linkname NewOverlay github.com/microsoft/typescript-go/internal/project.NewOverlay
func NewOverlay(fileName string, content string, version int32, kind core.ScriptKind) *project.Overlay
//go:linkname NewOverlayFS github.com/microsoft/typescript-go/internal/project.NewOverlayFS
func NewOverlayFS(fs vfs.FS, overlays map[tspath.Path]*project.Overlay, positionEncoding lsproto.PositionEncodingKind, toPath func(string) tspath.Path) *project.OverlayFS
//go:linkname NewSession github.com/microsoft/typescript-go/internal/project.NewSession
func NewSession(init *project.SessionInit) *project.Session
//go:linkname NewSnapshotFSBuilder github.com/microsoft/typescript-go/internal/project.NewSnapshotFSBuilder
func NewSnapshotFSBuilder(fs vfs.FS, overlays map[tspath.Path]*project.Overlay, diskFiles map[tspath.Path]*project.DiskFile, positionEncoding lsproto.PositionEncodingKind, toPath func(fileName string) tspath.Path) *project.SnapshotFSBuilder
type Overlay = project.Overlay
type OverlayFS = project.OverlayFS
type ParseCache = project.ParseCache
type ParseCacheOptions = project.ParseCacheOptions
type PendingReload = project.PendingReload
const PendingReloadFileNames = project.PendingReloadFileNames
const PendingReloadFull = project.PendingReloadFull
const PendingReloadNone = project.PendingReloadNone
type ProgramUpdateKind = project.ProgramUpdateKind
const ProgramUpdateKindCloned = project.ProgramUpdateKindCloned
const ProgramUpdateKindNewFiles = project.ProgramUpdateKindNewFiles
const ProgramUpdateKindNone = project.ProgramUpdateKindNone
const ProgramUpdateKindSameFileNames = project.ProgramUpdateKindSameFileNames
type Project = project.Project
type ProjectCollection = project.ProjectCollection
type ProjectLoadKind = project.ProjectLoadKind
const ProjectLoadKindCreate = project.ProjectLoadKindCreate
const ProjectLoadKindFind = project.ProjectLoadKindFind
type Session = project.Session
type SessionInit = project.SessionInit
type SessionOptions = project.SessionOptions
type Snapshot = project.Snapshot
type SnapshotChange = project.SnapshotChange
type SnapshotFSBuilder = project.SnapshotFSBuilder
//go:linkname TsGoLintNewSnapshotFSBuilder github.com/microsoft/typescript-go/internal/project.TsGoLintNewSnapshotFSBuilder
func TsGoLintNewSnapshotFSBuilder(fs vfs.FS, currentDirectory string) *project.SnapshotFSBuilder
type UpdateReason = project.UpdateReason
const UpdateReasonDidChangeCompilerOptionsForInferredProjects = project.UpdateReasonDidChangeCompilerOptionsForInferredProjects
const UpdateReasonDidOpenFile = project.UpdateReasonDidOpenFile
const UpdateReasonRequestedLanguageServicePendingChanges = project.UpdateReasonRequestedLanguageServicePendingChanges
const UpdateReasonRequestedLanguageServiceProjectDirty = project.UpdateReasonRequestedLanguageServiceProjectDirty
const UpdateReasonRequestedLanguageServiceProjectNotLoaded = project.UpdateReasonRequestedLanguageServiceProjectNotLoaded
const UpdateReasonUnknown = project.UpdateReasonUnknown
type WatchedFiles[T any] = project.WatchedFiles[T]
type WatcherID = project.WatcherID
