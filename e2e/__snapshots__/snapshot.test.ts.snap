// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`TSGoLint E2E Snapshot Tests > should correctly evaluate project references 1`] = `
{
  "lintDiagnostics": [],
  "typeDiagnostics": [],
}
`;

exports[`TSGoLint E2E Snapshot Tests > should correctly lint files not inside a project 1`] = `
{
  "lintDiagnostics": [
    {
      "file_path": "fixtures/with-unmatched-files/src/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe argument of type any assigned to a parameter of type string.",
        "id": "unsafeArgument",
      },
      "range": {
        "end": 45,
        "pos": 36,
      },
      "rule": "no-unsafe-argument",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/with-unmatched-files/test.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe argument of type any assigned to a parameter of type string.",
        "id": "unsafeArgument",
      },
      "range": {
        "end": 45,
        "pos": 36,
      },
      "rule": "no-unsafe-argument",
      "suggestions": [],
    },
  ],
  "typeDiagnostics": [],
}
`;

exports[`TSGoLint E2E Snapshot Tests > should generate TypeScript type checking diagnostics 1`] = `
{
  "lintDiagnostics": [
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 296,
        "pos": 286,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 286,
                "pos": 286,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 286,
                "pos": 286,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 842,
        "pos": 807,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 898,
        "pos": 879,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .someMethod on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 898,
        "pos": 888,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 252,
        "pos": 183,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 727,
        "pos": 543,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/type-checking/no-errors.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 849,
        "pos": 805,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 805,
                "pos": 805,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 805,
                "pos": 805,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
  ],
  "typeDiagnostics": [
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "message": "Type 'string' is not assignable to type 'number'.",
      "range": {
        "end": 103,
        "pos": 102,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "message": "Type 'number' is not assignable to type 'string'.",
      "range": {
        "end": 641,
        "pos": 635,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "message": "Type 'string' is not assignable to type 'number'.",
      "range": {
        "end": 687,
        "pos": 681,
      },
    },
    {
      "category": "error",
      "code": 2345,
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "message": "Argument of type 'number' is not assignable to parameter of type 'string'.",
      "range": {
        "end": 1097,
        "pos": 1094,
      },
    },
    {
      "category": "error",
      "code": 2741,
      "file_path": "fixtures/type-checking/mixed-errors.ts",
      "message": "Property 'email' is missing in type '{ name: string; }' but required in type 'User'.",
      "range": {
        "end": 428,
        "pos": 424,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'string' is not assignable to type 'number'.",
      "range": {
        "end": 96,
        "pos": 87,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'number' is not assignable to type 'string'.",
      "range": {
        "end": 192,
        "pos": 183,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'string' is not assignable to type 'number'.",
      "range": {
        "end": 916,
        "pos": 913,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'null' is not assignable to type 'string'.",
      "range": {
        "end": 1049,
        "pos": 1035,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'undefined' is not assignable to type 'number'.",
      "range": {
        "end": 1143,
        "pos": 1128,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'number' is not assignable to type 'string'.",
      "range": {
        "end": 1293,
        "pos": 1287,
      },
    },
    {
      "category": "error",
      "code": 2322,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Type 'string' is not assignable to type 'T'.",
      "range": {
        "end": 1428,
        "pos": 1422,
      },
    },
    {
      "category": "error",
      "code": 2339,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Property 'unknownProperty' does not exist on type '{ name: string; age: number; }'.",
      "range": {
        "end": 635,
        "pos": 620,
      },
    },
    {
      "category": "error",
      "code": 2345,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Argument of type 'string' is not assignable to parameter of type 'number'.",
      "range": {
        "end": 387,
        "pos": 384,
      },
    },
    {
      "category": "error",
      "code": 2540,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Cannot assign to '0' because it is a read-only property.",
      "range": {
        "end": 1592,
        "pos": 1591,
      },
    },
    {
      "category": "error",
      "code": 2554,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Expected 2 arguments, but got 1.",
      "range": {
        "end": 490,
        "pos": 480,
      },
    },
    {
      "category": "error",
      "code": 2741,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "Property 'age' is missing in type '{ name: string; }' but required in type 'Person'.",
      "range": {
        "end": 789,
        "pos": 776,
      },
    },
    {
      "category": "error",
      "code": 18048,
      "file_path": "fixtures/type-checking/type-errors.ts",
      "message": "'maybeObj.prop' is possibly 'undefined'.",
      "range": {
        "end": 1787,
        "pos": 1774,
      },
    },
  ],
}
`;

exports[`TSGoLint E2E Snapshot Tests > should generate consistent diagnostics snapshot 1`] = `
{
  "lintDiagnostics": [
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
        "id": "await",
      },
      "range": {
        "end": 63,
        "pos": 55,
      },
      "rule": "await-thenable",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 60,
                "pos": 55,
              },
              "text": "",
            },
          ],
          "message": {
            "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
            "id": "await",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
        "id": "await",
      },
      "range": {
        "end": 123,
        "pos": 106,
      },
      "rule": "await-thenable",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 111,
                "pos": 106,
              },
              "text": "",
            },
          ],
          "message": {
            "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
            "id": "await",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
        "id": "await",
      },
      "range": {
        "end": 278,
        "pos": 262,
      },
      "rule": "await-thenable",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 267,
                "pos": 262,
              },
              "text": "",
            },
          ],
          "message": {
            "description": "Unexpected \`await\` of a non-Promise (non-"Thenable") value.",
            "id": "await",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 70,
        "pos": 65,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 137,
        "pos": 133,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-array-delete/index.ts",
      "fixes": [],
      "message": {
        "description": "Using the \`delete\` operator with an array expression is unsafe.",
        "id": "noArrayDelete",
      },
      "range": {
        "end": 98,
        "pos": 85,
      },
      "rule": "no-array-delete",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 91,
                "pos": 85,
              },
              "text": "",
            },
            {
              "range": {
                "end": 96,
                "pos": 95,
              },
              "text": ".splice(",
            },
            {
              "range": {
                "end": 98,
                "pos": 97,
              },
              "text": ", 1)",
            },
          ],
          "message": {
            "description": "Using the \`delete\` operator with an array expression is unsafe.",
            "id": "noArrayDelete",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-array-delete/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-base-to-string/index.ts",
      "fixes": [],
      "message": {
        "description": "'// Examples of incorrect code for no-base-to-string rule

// These will evaluate to '[object Object]'
({})' will use Object's default stringification format ('[object Object]') when stringified.",
        "id": "baseToString",
      },
      "range": {
        "end": 106,
        "pos": 102,
      },
      "rule": "no-base-to-string",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-base-to-string/index.ts",
      "fixes": [],
      "message": {
        "description": "'
({foo: 'bar'})' will use Object's default stringification format ('[object Object]') when stringified.",
        "id": "baseToString",
      },
      "range": {
        "end": 133,
        "pos": 119,
      },
      "rule": "no-base-to-string",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-base-to-string/index.ts",
      "fixes": [],
      "message": {
        "description": "'
({foo: 'bar'})' will use Object's default stringification format ('[object Object]') when stringified.",
        "id": "baseToString",
      },
      "range": {
        "end": 160,
        "pos": 146,
      },
      "rule": "no-base-to-string",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-base-to-string/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-confusing-void-expression/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [
        {
          "range": {
            "end": 90,
            "pos": 87,
          },
          "text": "",
        },
        {
          "range": {
            "end": 86,
            "pos": 85,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "Union type constituent is duplicated with  'A'.",
        "id": "duplicate",
      },
      "range": {
        "end": 90,
        "pos": 87,
      },
      "rule": "no-duplicate-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [
        {
          "range": {
            "end": 215,
            "pos": 210,
          },
          "text": "",
        },
        {
          "range": {
            "end": 209,
            "pos": 208,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "Union type constituent is duplicated with  'foo'.",
        "id": "duplicate",
      },
      "range": {
        "end": 215,
        "pos": 210,
      },
      "rule": "no-duplicate-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'A' is an 'error' type that acts as 'any' and overrides all other types in this union type.",
        "id": "errorTypeOverrides",
      },
      "range": {
        "end": 104,
        "pos": 103,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'A' is an 'error' type that acts as 'any' and overrides all other types in this union type.",
        "id": "errorTypeOverrides",
      },
      "range": {
        "end": 108,
        "pos": 107,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'B' is an 'error' type that acts as 'any' and overrides all other types in this union type.",
        "id": "errorTypeOverrides",
      },
      "range": {
        "end": 112,
        "pos": 111,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [
        {
          "range": {
            "end": 49,
            "pos": 49,
          },
          "text": "{ ",
        },
        {
          "range": {
            "end": 66,
            "pos": 66,
          },
          "text": "; }",
        },
      ],
      "message": {
        "description": "Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.",
        "id": "invalidVoidExprArrow",
      },
      "range": {
        "end": 66,
        "pos": 50,
      },
      "rule": "no-confusing-void-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 77,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 166,
        "pos": 134,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 200,
        "pos": 168,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 236,
        "pos": 202,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "An array of Promises may be unintentional.",
        "help": "Consider handling the promises' fulfillment or rejection with Promise.all or similar, or explicitly marking the expression as ignored with the \`void\` operator.",
        "id": "floatingPromiseArrayVoid",
      },
      "range": {
        "end": 272,
        "pos": 238,
      },
      "rule": "no-floating-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 191,
        "pos": 168,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 225,
        "pos": 202,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 132,
        "pos": 79,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 270,
        "pos": 252,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-for-in-array/index.ts",
      "fixes": [],
      "message": {
        "description": "For-in loops over arrays skips holes, returns indices as strings, and may visit the prototype chain or other enumerable properties. Use a more robust iteration method such as for-of or array.forEach instead.",
        "id": "forInViolation",
      },
      "range": {
        "end": 100,
        "pos": 80,
      },
      "rule": "no-for-in-array",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-for-in-array/index.ts",
      "fixes": [],
      "message": {
        "description": "For-in loops over arrays skips holes, returns indices as strings, and may visit the prototype chain or other enumerable properties. Use a more robust iteration method such as for-of or array.forEach instead.",
        "id": "forInViolation",
      },
      "range": {
        "end": 149,
        "pos": 129,
      },
      "rule": "no-for-in-array",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-for-in-array/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Consider passing a function.",
        "id": "noImpliedEvalError",
      },
      "range": {
        "end": 82,
        "pos": 67,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Consider passing a function.",
        "id": "noImpliedEvalError",
      },
      "range": {
        "end": 118,
        "pos": 103,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Consider passing a function.",
        "id": "noImpliedEvalError",
      },
      "range": {
        "end": 154,
        "pos": 140,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Consider passing a function.",
        "id": "noImpliedEvalError",
      },
      "range": {
        "end": 187,
        "pos": 176,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Consider passing a function.",
        "id": "noImpliedEvalError",
      },
      "range": {
        "end": 225,
        "pos": 214,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "Implied eval. Do not use the Function constructor to create functions.",
        "id": "noFunctionConstructor",
      },
      "range": {
        "end": 282,
        "pos": 244,
      },
      "rule": "no-implied-eval",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-meaningless-void-operator/index.ts",
      "fixes": [
        {
          "range": {
            "end": 165,
            "pos": 161,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "void operator shouldn't be used on undefined; it should convey that a return value is being ignored",
        "id": "meaninglessVoidOperator",
      },
      "range": {
        "end": 175,
        "pos": 161,
      },
      "rule": "no-meaningless-void-operator",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-meaningless-void-operator/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected a non-Promise value to be spread in an object.",
        "id": "spread",
      },
      "range": {
        "end": 74,
        "pos": 67,
      },
      "rule": "no-misused-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "Using the spread operator on Promise in an object can cause unexpected behavior. Did you forget to await the promise?",
        "id": "noPromiseSpreadInObject",
      },
      "range": {
        "end": 74,
        "pos": 64,
      },
      "rule": "no-misused-spread",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 67,
                "pos": 67,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Using the spread operator on Promise in an object can cause unexpected behavior. Did you forget to await the promise?",
            "id": "noPromiseSpreadInObject",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "Using the spread operator on a function without additional properties can cause unexpected behavior. Did you forget to call the function?",
        "id": "noFunctionSpreadInObject",
      },
      "range": {
        "end": 172,
        "pos": 160,
      },
      "rule": "no-misused-spread",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "Using the spread operator on a Map in an object will result in an empty object. Did you mean to use \`Object.fromEntries(map)\` instead?",
        "id": "noMapSpreadInObject",
      },
      "range": {
        "end": 243,
        "pos": 237,
      },
      "rule": "no-misused-spread",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 236,
                "pos": 235,
              },
              "text": "",
            },
            {
              "range": {
                "end": 240,
                "pos": 237,
              },
              "text": "Object.fromEntries(",
            },
            {
              "range": {
                "end": 243,
                "pos": 243,
              },
              "text": ")",
            },
            {
              "range": {
                "end": 245,
                "pos": 244,
              },
              "text": "",
            },
          ],
          "message": {
            "description": "Using the spread operator on a Map in an object will result in an empty object. Did you mean to use \`Object.fromEntries(map)\` instead?",
            "id": "noMapSpreadInObject",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "Using the spread operator on a string can mishandle special characters, as can \`.split("")\`.
'- \`...\` produces Unicode code points, which will decompose complex emojis into individual emojis- .split("") produces UTF-16 code units, which breaks rich characters in many languagesConsider using \`Intl.Segmenter\` for locale-aware string decomposition.Otherwise, if you don't need to preserve emojis or other non-Ascii characters, disable this lint rule on this line or configure the 'allow' rule option.",
        "id": "noStringSpread",
      },
      "range": {
        "end": 311,
        "pos": 300,
      },
      "rule": "no-misused-spread",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "fixes": [],
      "message": {
        "description": "Mixing number and string enums can be confusing.",
        "id": "mixed",
      },
      "range": {
        "end": 100,
        "pos": 92,
      },
      "rule": "no-mixed-enums",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "fixes": [],
      "message": {
        "description": "Mixing number and string enums can be confusing.",
        "id": "mixed",
      },
      "range": {
        "end": 145,
        "pos": 144,
      },
      "rule": "no-mixed-enums",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'unknown' overrides all other types in this union type.",
        "id": "overrides",
      },
      "range": {
        "end": 131,
        "pos": 124,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'any' overrides all other types in this union type.",
        "id": "overrides",
      },
      "range": {
        "end": 186,
        "pos": 183,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "'never' is overridden by other types in this union type.",
        "id": "overridden",
      },
      "range": {
        "end": 245,
        "pos": 240,
      },
      "rule": "no-redundant-type-constituents",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-boolean-literal-compare/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-boolean-literal-compare/index.ts",
      "fixes": [
        {
          "range": {
            "end": 144,
            "pos": 122,
          },
          "text": "someCondition",
        },
      ],
      "message": {
        "description": "This expression unnecessarily compares a boolean value to a boolean instead of using it directly.",
        "id": "direct",
      },
      "range": {
        "end": 144,
        "pos": 122,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-boolean-literal-compare/index.ts",
      "fixes": [
        {
          "range": {
            "end": 187,
            "pos": 164,
          },
          "text": "someCondition",
        },
        {
          "range": {
            "end": 164,
            "pos": 164,
          },
          "text": "!",
        },
      ],
      "message": {
        "description": "This expression unnecessarily compares a boolean value to a boolean instead of using it directly.",
        "id": "direct",
      },
      "range": {
        "end": 187,
        "pos": 164,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "fixes": [],
      "message": {
        "description": "Template literal expression is unnecessary and can be simplified.",
        "id": "noUnnecessaryTemplateExpression",
      },
      "range": {
        "end": 212,
        "pos": 202,
      },
      "rule": "no-unnecessary-template-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "fixes": [],
      "message": {
        "description": "Template literal expression is unnecessary and can be simplified.",
        "id": "noUnnecessaryTemplateExpression",
      },
      "range": {
        "end": 223,
        "pos": 213,
      },
      "rule": "no-unnecessary-template-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-arguments/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-arguments/index.ts",
      "fixes": [
        {
          "range": {
            "end": 214,
            "pos": 206,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This is the default value for this type parameter, so it can be omitted.",
        "id": "unnecessaryTypeParameter",
      },
      "range": {
        "end": 213,
        "pos": 207,
      },
      "rule": "no-unnecessary-type-arguments",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "fixes": [
        {
          "range": {
            "end": 123,
            "pos": 121,
          },
          "text": "",
        },
        {
          "range": {
            "end": 130,
            "pos": 124,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 130,
        "pos": 117,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "fixes": [
        {
          "range": {
            "end": 251,
            "pos": 249,
          },
          "text": "",
        },
        {
          "range": {
            "end": 258,
            "pos": 252,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 258,
        "pos": 237,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "fixes": [
        {
          "range": {
            "end": 356,
            "pos": 354,
          },
          "text": "",
        },
        {
          "range": {
            "end": 359,
            "pos": 357,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 359,
        "pos": 350,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-argument/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-argument/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe argument of type any assigned to a parameter of type string.",
        "id": "unsafeArgument",
      },
      "range": {
        "end": 181,
        "pos": 173,
      },
      "rule": "no-unsafe-argument",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-argument/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe argument of type any assigned to a parameter of type number.",
        "id": "unsafeArgument",
      },
      "range": {
        "end": 281,
        "pos": 273,
      },
      "rule": "no-unsafe-argument",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "fixes": [
        {
          "range": {
            "end": 231,
            "pos": 229,
          },
          "text": "",
        },
        {
          "range": {
            "end": 235,
            "pos": 232,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 235,
        "pos": 220,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 119,
        "pos": 97,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 174,
        "pos": 160,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 235,
        "pos": 214,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 180,
        "pos": 154,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 93,
        "pos": 85,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 121,
        "pos": 113,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 171,
        "pos": 163,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 230,
        "pos": 222,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 237,
        "pos": 222,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 245,
        "pos": 222,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .then on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 237,
        "pos": 233,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .catch on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 245,
        "pos": 240,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "fixes": [],
      "message": {
        "description": "Mixing number and string enums can be confusing.",
        "id": "mixed",
      },
      "range": {
        "end": 95,
        "pos": 89,
      },
      "rule": "no-mixed-enums",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 266,
        "pos": 240,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 264,
        "pos": 249,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .foo on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 106,
        "pos": 103,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .bar on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 145,
        "pos": 142,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access ['key'] on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 197,
        "pos": 192,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .method on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 264,
        "pos": 258,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe return of a value of type \`any\`.",
        "id": "unsafeReturn",
      },
      "range": {
        "end": 136,
        "pos": 120,
      },
      "rule": "no-unsafe-return",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe return of a value of type \`any\`.",
        "id": "unsafeReturn",
      },
      "range": {
        "end": 197,
        "pos": 189,
      },
      "rule": "no-unsafe-return",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe return of a value of type \`any\`.",
        "id": "unsafeReturn",
      },
      "range": {
        "end": 291,
        "pos": 275,
      },
      "rule": "no-unsafe-return",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 120,
        "pos": 102,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 289,
        "pos": 265,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .someProperty on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 332,
        "pos": 320,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe return of a value of type \`any\`.",
        "id": "unsafeReturn",
      },
      "range": {
        "end": 333,
        "pos": 303,
      },
      "rule": "no-unsafe-return",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assertion to \`any\` detected: consider using a more specific type to ensure safety.",
        "id": "unsafeToAnyTypeAssertion",
      },
      "range": {
        "end": 120,
        "pos": 108,
      },
      "rule": "no-unsafe-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assertion to \`any\` detected: consider using a more specific type to ensure safety.",
        "id": "unsafeToAnyTypeAssertion",
      },
      "range": {
        "end": 172,
        "pos": 160,
      },
      "rule": "no-unsafe-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assertion from \`any\` detected: consider using type guards or a safer assertion.",
        "id": "unsafeOfAnyTypeAssertion",
      },
      "range": {
        "end": 182,
        "pos": 160,
      },
      "rule": "no-unsafe-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assertion to \`any\` detected: consider using a more specific type to ensure safety.",
        "id": "unsafeToAnyTypeAssertion",
      },
      "range": {
        "end": 289,
        "pos": 277,
      },
      "rule": "no-unsafe-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "fixes": [],
      "message": {
        "description": "Argument of unary negation should be assignable to number | bigint but is unknown instead.",
        "id": "unaryMinus",
      },
      "range": {
        "end": 110,
        "pos": 104,
      },
      "rule": "no-unsafe-unary-minus",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "fixes": [],
      "message": {
        "description": "Argument of unary negation should be assignable to number | bigint but is string instead.",
        "id": "unaryMinus",
      },
      "range": {
        "end": 177,
        "pos": 173,
      },
      "rule": "no-unsafe-unary-minus",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "fixes": [],
      "message": {
        "description": "Argument of unary negation should be assignable to number | bigint but is false instead.",
        "id": "unaryMinus",
      },
      "range": {
        "end": 250,
        "pos": 245,
      },
      "rule": "no-unsafe-unary-minus",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "fixes": [],
      "message": {
        "description": "Argument of unary negation should be assignable to number | bigint but is { prop: any; } instead.",
        "id": "unaryMinus",
      },
      "range": {
        "end": 321,
        "pos": 317,
      },
      "rule": "no-unsafe-unary-minus",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "fixes": [
        {
          "range": {
            "end": 269,
            "pos": 267,
          },
          "text": "",
        },
        {
          "range": {
            "end": 276,
            "pos": 270,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 276,
        "pos": 261,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe type assertion: type 'string' is more narrow than the original type.",
        "id": "unsafeTypeAssertion",
      },
      "range": {
        "end": 201,
        "pos": 186,
      },
      "rule": "no-unsafe-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected an error object to be thrown.",
        "id": "object",
      },
      "range": {
        "end": 70,
        "pos": 63,
      },
      "rule": "only-throw-error",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected an error object to be thrown.",
        "id": "object",
      },
      "range": {
        "end": 100,
        "pos": 98,
      },
      "rule": "only-throw-error",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected an error object to be thrown.",
        "id": "object",
      },
      "range": {
        "end": 132,
        "pos": 128,
      },
      "rule": "only-throw-error",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected an error object to be thrown.",
        "id": "object",
      },
      "range": {
        "end": 181,
        "pos": 161,
      },
      "rule": "only-throw-error",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/only-throw-error/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected an error object to be thrown.",
        "id": "object",
      },
      "range": {
        "end": 219,
        "pos": 215,
      },
      "rule": "only-throw-error",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 93,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 139,
        "pos": 120,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 120,
                "pos": 120,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 120,
                "pos": 120,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 187,
        "pos": 166,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 166,
                "pos": 166,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 166,
                "pos": 166,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 252,
        "pos": 215,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 215,
                "pos": 215,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 215,
                "pos": 215,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 306,
        "pos": 285,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 285,
                "pos": 285,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 285,
                "pos": 285,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 92,
        "pos": 69,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 138,
        "pos": 120,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 186,
        "pos": 166,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 251,
        "pos": 215,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-promise-reject-errors/index.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 305,
        "pos": 285,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-reduce-type-parameter/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-reduce-type-parameter/index.ts",
      "fixes": [
        {
          "range": {
            "end": 176,
            "pos": 174,
          },
          "text": "",
        },
        {
          "range": {
            "end": 183,
            "pos": 177,
          },
          "text": "",
        },
      ],
      "message": {
        "description": "This assertion is unnecessary since it does not change the type of the expression.",
        "id": "unnecessaryAssertion",
      },
      "range": {
        "end": 183,
        "pos": 131,
      },
      "rule": "no-unnecessary-type-assertion",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-reduce-type-parameter/index.ts",
      "fixes": [
        {
          "range": {
            "end": 344,
            "pos": 332,
          },
          "text": "",
        },
        {
          "range": {
            "end": 256,
            "pos": 256,
          },
          "text": "< string[]>",
        },
      ],
      "message": {
        "description": "Unnecessary assertion: Array#reduce accepts a type parameter for the default value.",
        "id": "preferTypeParameter",
      },
      "range": {
        "end": 344,
        "pos": 330,
      },
      "rule": "prefer-reduce-type-parameter",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-return-this-type/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/prefer-return-this-type/index.ts",
      "fixes": [
        {
          "range": {
            "end": 145,
            "pos": 138,
          },
          "text": "this",
        },
      ],
      "message": {
        "description": "Use \`this\` type instead.",
        "id": "useThisType",
      },
      "range": {
        "end": 145,
        "pos": 138,
      },
      "rule": "prefer-return-this-type",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "fixes": [
        {
          "range": {
            "end": 107,
            "pos": 107,
          },
          "text": " async ",
        },
      ],
      "message": {
        "description": "Functions that return promises must be async.",
        "id": "missingAsync",
      },
      "range": {
        "end": 201,
        "pos": 107,
      },
      "rule": "promise-function-async",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "fixes": [
        {
          "range": {
            "end": 180,
            "pos": 180,
          },
          "text": " async ",
        },
      ],
      "message": {
        "description": "Functions that return promises must be async.",
        "id": "missingAsync",
      },
      "range": {
        "end": 197,
        "pos": 180,
      },
      "rule": "promise-function-async",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "fixes": [
        {
          "range": {
            "end": 267,
            "pos": 267,
          },
          "text": " async ",
        },
      ],
      "message": {
        "description": "Functions that return promises must be async.",
        "id": "missingAsync",
      },
      "range": {
        "end": 351,
        "pos": 267,
      },
      "rule": "promise-function-async",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "fixes": [
        {
          "range": {
            "end": 328,
            "pos": 328,
          },
          "text": " async ",
        },
      ],
      "message": {
        "description": "Functions that return promises must be async.",
        "id": "missingAsync",
      },
      "range": {
        "end": 345,
        "pos": 328,
      },
      "rule": "promise-function-async",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/related-getter-setter-pairs/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/related-getter-setter-pairs/index.ts",
      "fixes": [],
      "message": {
        "description": "\`get()\` type should be assignable to its equivalent \`set()\` type.",
        "id": "mismatch",
      },
      "range": {
        "end": 185,
        "pos": 179,
      },
      "rule": "related-getter-setter-pairs",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-array-sort-compare/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-array-sort-compare/index.ts",
      "fixes": [],
      "message": {
        "description": "Require 'compare' argument.",
        "id": "requireCompare",
      },
      "range": {
        "end": 114,
        "pos": 100,
      },
      "rule": "require-array-sort-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-array-sort-compare/index.ts",
      "fixes": [],
      "message": {
        "description": "Require 'compare' argument.",
        "id": "requireCompare",
      },
      "range": {
        "end": 281,
        "pos": 265,
      },
      "rule": "require-array-sort-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe call of a(n) \`any\` typed value.",
        "id": "unsafeCall",
      },
      "range": {
        "end": 240,
        "pos": 228,
      },
      "rule": "no-unsafe-call",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .map on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 240,
        "pos": 237,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe return of a value of type \`any\`.",
        "id": "unsafeReturn",
      },
      "range": {
        "end": 253,
        "pos": 221,
      },
      "rule": "no-unsafe-return",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 255,
        "pos": 205,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe assignment of an any value.",
        "id": "anyAssignment",
      },
      "range": {
        "end": 16,
        "pos": 4,
      },
      "rule": "no-unsafe-assignment",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "fixes": [],
      "message": {
        "description": "Numeric '+' operations must either be both bigints or both numbers. Got \`bigint\` + \`number\`.",
        "id": "bigintAndNumber",
      },
      "range": {
        "end": 16,
        "pos": 10,
      },
      "rule": "restrict-plus-operands",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "fixes": [],
      "message": {
        "description": "Invalid operand for a '+' operation. Operands must each be a number or string, allowing a string + any of: \`any\`, \`boolean\`, \`null\`, \`RegExp\`, \`undefined\`. Got \`never\`.",
        "id": "invalid",
      },
      "range": {
        "end": 57,
        "pos": 56,
      },
      "rule": "restrict-plus-operands",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "'obj' will use Object's default stringification format ('[object Object]') when stringified.",
        "id": "baseToString",
      },
      "range": {
        "end": 247,
        "pos": 244,
      },
      "rule": "no-base-to-string",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "Invalid type "{ prop: any; }" of template literal expression.",
        "id": "invalidType",
      },
      "range": {
        "end": 247,
        "pos": 244,
      },
      "rule": "restrict-template-expressions",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "Invalid type "symbol" of template literal expression.",
        "id": "invalidType",
      },
      "range": {
        "end": 319,
        "pos": 316,
      },
      "rule": "restrict-template-expressions",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "Invalid type "Function" of template literal expression.",
        "id": "invalidType",
      },
      "range": {
        "end": 400,
        "pos": 398,
      },
      "rule": "restrict-template-expressions",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "fixes": [],
      "message": {
        "description": "Invalid type "number[]" of template literal expression.",
        "id": "invalidType",
      },
      "range": {
        "end": 468,
        "pos": 465,
      },
      "rule": "restrict-template-expressions",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Returning an awaited promise is required in this context.",
        "id": "requiredPromiseAwait",
      },
      "range": {
        "end": 351,
        "pos": 340,
      },
      "rule": "return-await",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 340,
                "pos": 340,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Returning an awaited promise is required in this context.",
            "id": "requiredPromiseAwait",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "fixes": [],
      "message": {
        "description": "Returning an awaited promise is required in this context.",
        "id": "requiredPromiseAwait",
      },
      "range": {
        "end": 605,
        "pos": 592,
      },
      "rule": "return-await",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 592,
                "pos": 592,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Returning an awaited promise is required in this context.",
            "id": "requiredPromiseAwait",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "fixes": [],
      "message": {
        "description": "The case statement does not have a shared enum type with the switch predicate.",
        "id": "mismatchedCase",
      },
      "range": {
        "end": 236,
        "pos": 184,
      },
      "rule": "no-unsafe-enum-comparison",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "fixes": [],
      "message": {
        "description": "The case statement does not have a shared enum type with the switch predicate.",
        "id": "mismatchedCase",
      },
      "range": {
        "end": 290,
        "pos": 241,
      },
      "rule": "no-unsafe-enum-comparison",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "fixes": [],
      "message": {
        "description": "Switch is not exhaustive",
        "id": "switchIsNotExhaustive",
      },
      "range": {
        "end": 176,
        "pos": 170,
      },
      "rule": "switch-exhaustiveness-check",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/unbound-method/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/unbound-method/index.ts",
      "fixes": [],
      "message": {
        "description": "Avoid referencing unbound methods which may cause unintentional scoping of \`this\`.
If your function does not access \`this\`, you can annotate it with \`this: void\`, or consider using an arrow function instead.",
        "id": "unboundWithoutThisAnnotation",
      },
      "range": {
        "end": 336,
        "pos": 328,
      },
      "rule": "unbound-method",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/unbound-method/index.ts",
      "fixes": [],
      "message": {
        "description": "Avoid referencing unbound methods which may cause unintentional scoping of \`this\`.
If your function does not access \`this\`, you can annotate it with \`this: void\`, or consider using an arrow function instead.",
        "id": "unboundWithoutThisAnnotation",
      },
      "range": {
        "end": 453,
        "pos": 440,
      },
      "rule": "unbound-method",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/unbound-method/index.ts",
      "fixes": [],
      "message": {
        "description": "Avoid referencing unbound methods which may cause unintentional scoping of \`this\`.
If your function does not access \`this\`, you can annotate it with \`this: void\`, or consider using an arrow function instead.",
        "id": "unboundWithoutThisAnnotation",
      },
      "range": {
        "end": 565,
        "pos": 557,
      },
      "rule": "unbound-method",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/unbound-method/index.ts",
      "fixes": [],
      "message": {
        "description": "Avoid referencing unbound methods which may cause unintentional scoping of \`this\`.
If your function does not access \`this\`, you can annotate it with \`this: void\`, or consider using an arrow function instead.",
        "id": "unboundWithoutThisAnnotation",
      },
      "range": {
        "end": 655,
        "pos": 647,
      },
      "rule": "unbound-method",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/use-unknown-in-catch-callback-variable/index.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/use-unknown-in-catch-callback-variable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .message on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 225,
        "pos": 218,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/use-unknown-in-catch-callback-variable/index.ts",
      "fixes": [],
      "message": {
        "description": "Unsafe member access .message on an \`any\` value.",
        "id": "unsafeMemberExpression",
      },
      "range": {
        "end": 506,
        "pos": 499,
      },
      "rule": "no-unsafe-member-access",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/rules/use-unknown-in-catch-callback-variable/index.ts",
      "fixes": [],
      "message": {
        "description": "Prefer the safe \`: unknown\` for a \`catch\` callback variable.",
        "id": "useUnknown",
      },
      "range": {
        "end": 441,
        "pos": 431,
      },
      "rule": "use-unknown-in-catch-callback-variable",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 441,
                "pos": 438,
              },
              "text": "unknown",
            },
          ],
          "message": {
            "description": "Prefer the safe \`: unknown\` for a \`catch\` callback variable.",
            "id": "useUnknown",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [
        {
          "range": {
            "end": 49,
            "pos": 49,
          },
          "text": "{ ",
        },
        {
          "range": {
            "end": 66,
            "pos": 66,
          },
          "text": "; }",
        },
      ],
      "message": {
        "description": "Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.",
        "id": "invalidVoidExprArrow",
      },
      "range": {
        "end": 66,
        "pos": 50,
      },
      "rule": "no-confusing-void-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 77,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 166,
        "pos": 134,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 200,
        "pos": 168,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 236,
        "pos": 202,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "An array of Promises may be unintentional.",
        "help": "Consider handling the promises' fulfillment or rejection with Promise.all or similar, or explicitly marking the expression as ignored with the \`void\` operator.",
        "id": "floatingPromiseArrayVoid",
      },
      "range": {
        "end": 272,
        "pos": 238,
      },
      "rule": "no-floating-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 191,
        "pos": 168,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 225,
        "pos": 202,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 132,
        "pos": 79,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/a.ts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 270,
        "pos": 252,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [
        {
          "range": {
            "end": 49,
            "pos": 49,
          },
          "text": "{ ",
        },
        {
          "range": {
            "end": 66,
            "pos": 66,
          },
          "text": "; }",
        },
      ],
      "message": {
        "description": "Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.",
        "id": "invalidVoidExprArrow",
      },
      "range": {
        "end": 66,
        "pos": 50,
      },
      "rule": "no-confusing-void-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 77,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 166,
        "pos": 134,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 200,
        "pos": 168,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 236,
        "pos": 202,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "An array of Promises may be unintentional.",
        "help": "Consider handling the promises' fulfillment or rejection with Promise.all or similar, or explicitly marking the expression as ignored with the \`void\` operator.",
        "id": "floatingPromiseArrayVoid",
      },
      "range": {
        "end": 272,
        "pos": 238,
      },
      "rule": "no-floating-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 191,
        "pos": 168,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 225,
        "pos": 202,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 132,
        "pos": 79,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/b.mts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 270,
        "pos": 252,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [
        {
          "range": {
            "end": 49,
            "pos": 49,
          },
          "text": "{ ",
        },
        {
          "range": {
            "end": 66,
            "pos": 66,
          },
          "text": "; }",
        },
      ],
      "message": {
        "description": "Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.",
        "id": "invalidVoidExprArrow",
      },
      "range": {
        "end": 66,
        "pos": 50,
      },
      "rule": "no-confusing-void-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 77,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 166,
        "pos": 134,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 200,
        "pos": 168,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 236,
        "pos": 202,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "An array of Promises may be unintentional.",
        "help": "Consider handling the promises' fulfillment or rejection with Promise.all or similar, or explicitly marking the expression as ignored with the \`void\` operator.",
        "id": "floatingPromiseArrayVoid",
      },
      "range": {
        "end": 272,
        "pos": 238,
      },
      "rule": "no-floating-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 191,
        "pos": 168,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 225,
        "pos": 202,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 132,
        "pos": 79,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/c.cts",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 270,
        "pos": 252,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [
        {
          "range": {
            "end": 49,
            "pos": 49,
          },
          "text": "{ ",
        },
        {
          "range": {
            "end": 66,
            "pos": 66,
          },
          "text": "; }",
        },
      ],
      "message": {
        "description": "Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.",
        "id": "invalidVoidExprArrow",
      },
      "range": {
        "end": 66,
        "pos": 50,
      },
      "rule": "no-confusing-void-expression",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 77,
        "pos": 69,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 69,
                "pos": 69,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 166,
        "pos": 134,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 134,
                "pos": 134,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 200,
        "pos": 168,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 168,
                "pos": 168,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Promises must be awaited.",
        "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
        "id": "floatingVoid",
      },
      "range": {
        "end": 236,
        "pos": 202,
      },
      "rule": "no-floating-promises",
      "suggestions": [
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "void ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
        {
          "fixes": [
            {
              "range": {
                "end": 202,
                "pos": 202,
              },
              "text": "await ",
            },
          ],
          "message": {
            "description": "Promises must be awaited.",
            "help": "The promise must end with a call to .catch, or end with a call to .then with a rejection handler, or be explicitly marked as ignored with the \`void\` operator.",
            "id": "floatingVoid",
          },
        },
      ],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "An array of Promises may be unintentional.",
        "help": "Consider handling the promises' fulfillment or rejection with Promise.all or similar, or explicitly marking the expression as ignored with the \`void\` operator.",
        "id": "floatingPromiseArrayVoid",
      },
      "range": {
        "end": 272,
        "pos": 238,
      },
      "rule": "no-floating-promises",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "This rule requires the \`strictNullChecks\` compiler option to be turned on to function correctly.",
        "id": "noStrictNullCheck",
      },
      "range": {
        "end": 0,
        "pos": 0,
      },
      "rule": "no-unnecessary-boolean-literal-compare",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 191,
        "pos": 168,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Expected the Promise rejection reason to be an Error.",
        "id": "rejectAnError",
      },
      "range": {
        "end": 225,
        "pos": 202,
      },
      "rule": "prefer-promise-reject-errors",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 132,
        "pos": 79,
      },
      "rule": "require-await",
      "suggestions": [],
    },
    {
      "file_path": "fixtures/basic/src/d.tsx",
      "fixes": [],
      "message": {
        "description": "Function has no 'await' expression.",
        "id": "missingAwait",
      },
      "range": {
        "end": 270,
        "pos": 252,
      },
      "rule": "require-await",
      "suggestions": [],
    },
  ],
  "typeDiagnostics": [
    {
      "category": "error",
      "code": 1005,
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "message": "';' expected.",
      "range": {
        "end": 141,
        "pos": 140,
      },
    },
    {
      "category": "error",
      "code": 1434,
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "message": "Unexpected keyword or identifier.",
      "range": {
        "end": 130,
        "pos": 125,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "message": "Cannot find name 'await'.",
      "range": {
        "end": 130,
        "pos": 125,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "message": "Cannot find name 'then'.",
      "range": {
        "end": 137,
        "pos": 133,
      },
    },
    {
      "category": "error",
      "code": 2311,
      "file_path": "fixtures/basic/rules/await-thenable/index.ts",
      "message": "Cannot find name 'await'. Did you mean to write this in an async function?",
      "range": {
        "end": 70,
        "pos": 65,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-array-delete/index.ts",
      "message": "Cannot redeclare block-scoped variable 'arr'.",
      "range": {
        "end": 73,
        "pos": 70,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-confusing-void-expression/index.ts",
      "message": "Cannot find name 'condition'.",
      "range": {
        "end": 194,
        "pos": 185,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-confusing-void-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'foo'.",
      "range": {
        "end": 122,
        "pos": 119,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-confusing-void-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 182,
        "pos": 176,
      },
    },
    {
      "category": "error",
      "code": 2873,
      "file_path": "fixtures/basic/rules/no-confusing-void-expression/index.ts",
      "message": "This kind of expression is always falsy.",
      "range": {
        "end": 255,
        "pos": 245,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Duplicate identifier 'T1'.",
      "range": {
        "end": 78,
        "pos": 76,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Duplicate identifier 'T2'.",
      "range": {
        "end": 100,
        "pos": 98,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Duplicate identifier 'T3'.",
      "range": {
        "end": 122,
        "pos": 120,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Cannot find name 'A'.",
      "range": {
        "end": 104,
        "pos": 103,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Cannot find name 'A'.",
      "range": {
        "end": 108,
        "pos": 107,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Cannot find name 'B'.",
      "range": {
        "end": 112,
        "pos": 111,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Cannot find name 'A'.",
      "range": {
        "end": 169,
        "pos": 168,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-duplicate-type-constituents/index.ts",
      "message": "Cannot find name 'A'.",
      "range": {
        "end": 172,
        "pos": 171,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 108,
        "pos": 94,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-floating-promises/index.ts",
      "message": "Cannot redeclare block-scoped variable 'promise'.",
      "range": {
        "end": 13,
        "pos": 6,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-for-in-array/index.ts",
      "message": "Cannot redeclare block-scoped variable 'arr'.",
      "range": {
        "end": 65,
        "pos": 62,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "message": "Cannot redeclare block-scoped variable 'fn'.",
      "range": {
        "end": 241,
        "pos": 239,
      },
    },
    {
      "category": "error",
      "code": 2769,
      "file_path": "fixtures/basic/rules/no-implied-eval/index.ts",
      "message": "No overload matches this call.",
      "range": {
        "end": 154,
        "pos": 140,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/no-meaningless-void-operator/index.ts",
      "message": "Cannot find name 'somePromise'.",
      "range": {
        "end": 273,
        "pos": 262,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-meaningless-void-operator/index.ts",
      "message": "Cannot redeclare block-scoped variable 'foo'.",
      "range": {
        "end": 81,
        "pos": 78,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "message": "Cannot redeclare block-scoped variable 'promise'.",
      "range": {
        "end": 21,
        "pos": 14,
      },
    },
    {
      "category": "error",
      "code": 2552,
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "message": "Cannot find name 'strings'. Did you mean 'string'?",
      "range": {
        "end": 131,
        "pos": 124,
      },
    },
    {
      "category": "error",
      "code": 2802,
      "file_path": "fixtures/basic/rules/no-misused-spread/index.ts",
      "message": "Type 'string' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.",
      "range": {
        "end": 311,
        "pos": 303,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "message": "Duplicate identifier 'Open'.",
      "range": {
        "end": 75,
        "pos": 71,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "message": "Duplicate identifier 'Closed'.",
      "range": {
        "end": 89,
        "pos": 83,
      },
    },
    {
      "category": "error",
      "code": 2567,
      "file_path": "fixtures/basic/rules/no-mixed-enums/index.ts",
      "message": "Enum declarations can only merge with namespace or other enum declarations.",
      "range": {
        "end": 66,
        "pos": 60,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "message": "Duplicate identifier 'T1'.",
      "range": {
        "end": 112,
        "pos": 110,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "message": "Duplicate identifier 'T2'.",
      "range": {
        "end": 171,
        "pos": 169,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-redundant-type-constituents/index.ts",
      "message": "Duplicate identifier 'T3'.",
      "range": {
        "end": 228,
        "pos": 226,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str1'.",
      "range": {
        "end": 85,
        "pos": 81,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str2'.",
      "range": {
        "end": 114,
        "pos": 110,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str3'.",
      "range": {
        "end": 134,
        "pos": 130,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-template-expression/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str4'.",
      "range": {
        "end": 198,
        "pos": 194,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-type-arguments/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 195,
        "pos": 189,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 189,
        "pos": 180,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str'.",
      "range": {
        "end": 79,
        "pos": 76,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 234,
        "pos": 228,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unnecessary-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'num'.",
      "range": {
        "end": 321,
        "pos": 318,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-argument/index.ts",
      "message": "Cannot redeclare block-scoped variable 'anyValue'.",
      "range": {
        "end": 81,
        "pos": 73,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-argument/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 258,
        "pos": 252,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "message": "Cannot redeclare block-scoped variable 'anyValue'.",
      "range": {
        "end": 83,
        "pos": 75,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str'.",
      "range": {
        "end": 100,
        "pos": 97,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "message": "Cannot redeclare block-scoped variable 'num'.",
      "range": {
        "end": 150,
        "pos": 147,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "message": "Cannot redeclare block-scoped variable 'obj'.",
      "range": {
        "end": 207,
        "pos": 204,
      },
    },
    {
      "category": "error",
      "code": 2588,
      "file_path": "fixtures/basic/rules/no-unsafe-assignment/index.ts",
      "message": "Cannot assign to 'num' because it is a constant.",
      "range": {
        "end": 163,
        "pos": 160,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "message": "Cannot redeclare block-scoped variable 'anyValue'.",
      "range": {
        "end": 77,
        "pos": 69,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-call/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 160,
        "pos": 154,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "message": "Duplicate identifier 'Open'.",
      "range": {
        "end": 86,
        "pos": 82,
      },
    },
    {
      "category": "error",
      "code": 2300,
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "message": "Duplicate identifier 'Closed'.",
      "range": {
        "end": 105,
        "pos": 99,
      },
    },
    {
      "category": "error",
      "code": 2367,
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "message": "This comparison appears to be unintentional because the types 'Status' and 'Color' have no overlap.",
      "range": {
        "end": 242,
        "pos": 217,
      },
    },
    {
      "category": "error",
      "code": 2567,
      "file_path": "fixtures/basic/rules/no-unsafe-enum-comparison/index.ts",
      "message": "Enum declarations can only merge with namespace or other enum declarations.",
      "range": {
        "end": 77,
        "pos": 71,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "message": "Cannot redeclare block-scoped variable 'anyValue'.",
      "range": {
        "end": 86,
        "pos": 78,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-member-access/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 246,
        "pos": 240,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 105,
        "pos": 96,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 237,
        "pos": 226,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "message": "Cannot redeclare block-scoped variable 'anyValue'.",
      "range": {
        "end": 79,
        "pos": 71,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-return/index.ts",
      "message": "Cannot redeclare block-scoped variable 'processData'.",
      "range": {
        "end": 237,
        "pos": 226,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'value'.",
      "range": {
        "end": 84,
        "pos": 79,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str'.",
      "range": {
        "end": 105,
        "pos": 102,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-type-assertion/index.ts",
      "message": "Cannot redeclare block-scoped variable 'obj'.",
      "range": {
        "end": 157,
        "pos": 154,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "message": "Cannot redeclare block-scoped variable 'value'.",
      "range": {
        "end": 81,
        "pos": 76,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result1'.",
      "range": {
        "end": 101,
        "pos": 94,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str'.",
      "range": {
        "end": 147,
        "pos": 144,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result2'.",
      "range": {
        "end": 170,
        "pos": 163,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/no-unsafe-unary-minus/index.ts",
      "message": "Cannot redeclare block-scoped variable 'obj'.",
      "range": {
        "end": 291,
        "pos": 288,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "message": "Cannot redeclare block-scoped variable 'value'.",
      "range": {
        "end": 93,
        "pos": 88,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result1'.",
      "range": {
        "end": 183,
        "pos": 176,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/non-nullable-type-assertion-style/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result2'.",
      "range": {
        "end": 258,
        "pos": 251,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/prefer-reduce-type-parameter/index.ts",
      "message": "Cannot redeclare block-scoped variable 'numbers'.",
      "range": {
        "end": 82,
        "pos": 75,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/prefer-reduce-type-parameter/index.ts",
      "message": "Cannot redeclare block-scoped variable 'result'.",
      "range": {
        "end": 237,
        "pos": 231,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/promise-function-async/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 125,
        "pos": 116,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/require-array-sort-compare/index.ts",
      "message": "Cannot redeclare block-scoped variable 'numbers'.",
      "range": {
        "end": 80,
        "pos": 73,
      },
    },
    {
      "category": "error",
      "code": 2304,
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "message": "Cannot find name 'someData'.",
      "range": {
        "end": 236,
        "pos": 228,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 110,
        "pos": 101,
      },
    },
    {
      "category": "error",
      "code": 2394,
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "message": "This overload signature is not compatible with its implementation signature.",
      "range": {
        "end": 110,
        "pos": 101,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/require-await/index.ts",
      "message": "Cannot redeclare block-scoped variable 'processData'.",
      "range": {
        "end": 202,
        "pos": 191,
      },
    },
    {
      "category": "error",
      "code": 2365,
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "message": "Operator '+' cannot be applied to types '1n' and '1'.",
      "range": {
        "end": 16,
        "pos": 10,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "message": "Cannot redeclare block-scoped variable 'foo'.",
      "range": {
        "end": 7,
        "pos": 4,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "message": "Cannot redeclare block-scoped variable 'fn'.",
      "range": {
        "end": 24,
        "pos": 22,
      },
    },
    {
      "category": "error",
      "code": 2737,
      "file_path": "fixtures/basic/rules/restrict-plus-operands/index.ts",
      "message": "BigInt literals are not available when targeting lower than ES2020.",
      "range": {
        "end": 12,
        "pos": 10,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'obj'.",
      "range": {
        "end": 87,
        "pos": 84,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'fn'.",
      "range": {
        "end": 140,
        "pos": 138,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'arr'.",
      "range": {
        "end": 171,
        "pos": 168,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str1'.",
      "range": {
        "end": 231,
        "pos": 227,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str2'.",
      "range": {
        "end": 302,
        "pos": 298,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str3'.",
      "range": {
        "end": 382,
        "pos": 378,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Cannot redeclare block-scoped variable 'str4'.",
      "range": {
        "end": 452,
        "pos": 448,
      },
    },
    {
      "category": "error",
      "code": 2731,
      "file_path": "fixtures/basic/rules/restrict-template-expressions/index.ts",
      "message": "Implicit conversion of a 'symbol' to a 'string' will fail at runtime. Consider wrapping this expression in 'String(...)'.",
      "range": {
        "end": 319,
        "pos": 316,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 255,
        "pos": 244,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 766,
        "pos": 757,
      },
    },
    {
      "category": "error",
      "code": 2394,
      "file_path": "fixtures/basic/rules/return-await/index.ts",
      "message": "This overload signature is not compatible with its implementation signature.",
      "range": {
        "end": 815,
        "pos": 804,
      },
    },
    {
      "category": "error",
      "code": 2567,
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "message": "Enum declarations can only merge with namespace or other enum declarations.",
      "range": {
        "end": 79,
        "pos": 73,
      },
    },
    {
      "category": "error",
      "code": 2678,
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "message": "Type '"pending"' is not comparable to type 'Status'.",
      "range": {
        "end": 198,
        "pos": 189,
      },
    },
    {
      "category": "error",
      "code": 2678,
      "file_path": "fixtures/basic/rules/switch-exhaustiveness-check/index.ts",
      "message": "Type '"approved"' is not comparable to type 'Status'.",
      "range": {
        "end": 256,
        "pos": 246,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/rules/use-unknown-in-catch-callback-variable/index.ts",
      "message": "Cannot redeclare block-scoped variable 'promise'.",
      "range": {
        "end": 840,
        "pos": 833,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/src/a.ts",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 108,
        "pos": 94,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/src/a.ts",
      "message": "Cannot redeclare block-scoped variable 'promise'.",
      "range": {
        "end": 13,
        "pos": 6,
      },
    },
    {
      "category": "error",
      "code": 2393,
      "file_path": "fixtures/basic/src/d.tsx",
      "message": "Duplicate function implementation.",
      "range": {
        "end": 108,
        "pos": 94,
      },
    },
    {
      "category": "error",
      "code": 2451,
      "file_path": "fixtures/basic/src/d.tsx",
      "message": "Cannot redeclare block-scoped variable 'promise'.",
      "range": {
        "end": 13,
        "pos": 6,
      },
    },
  ],
}
`;
