// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package no_floating_promises

import "encoding/json"

type NoFloatingPromisesOptions struct {
	// CheckThenables corresponds to the JSON schema field "checkThenables".
	CheckThenables bool `json:"checkThenables,omitempty"`

	// IgnoreIIFE corresponds to the JSON schema field "ignoreIIFE".
	IgnoreIIFE bool `json:"ignoreIIFE,omitempty"`

	// IgnoreVoid corresponds to the JSON schema field "ignoreVoid".
	IgnoreVoid bool `json:"ignoreVoid,omitempty"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *NoFloatingPromisesOptions) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	type Plain NoFloatingPromisesOptions
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if v, ok := raw["checkThenables"]; !ok || v == nil {
		plain.CheckThenables = false
	}
	if v, ok := raw["ignoreIIFE"]; !ok || v == nil {
		plain.IgnoreIIFE = false
	}
	if v, ok := raw["ignoreVoid"]; !ok || v == nil {
		plain.IgnoreVoid = true
	}
	*j = NoFloatingPromisesOptions(plain)
	return nil
}
