From 7652de1cf2d626000f562884ad104bc213213ecb Mon Sep 17 00:00:00 2001
From: Cameron Clark <cameron.clark@hey.com>
Date: Fri, 24 Oct 2025 11:24:09 +0100
Subject: [PATCH] fix panic when compiling wildcard directories pattern

---
 .../tsoptions/wildcarddirectories_test.go     | 65 +++++++++++++++++++
 internal/vfs/utilities.go                     |  8 +--
 2 files changed, 69 insertions(+), 4 deletions(-)
 create mode 100644 internal/tsoptions/wildcarddirectories_test.go

diff --git a/internal/tsoptions/wildcarddirectories_test.go b/internal/tsoptions/wildcarddirectories_test.go
new file mode 100644
index 000000000..65976295a
--- /dev/null
+++ b/internal/tsoptions/wildcarddirectories_test.go
@@ -0,0 +1,65 @@
+package tsoptions
+
+import (
+	"testing"
+
+	"github.com/microsoft/typescript-go/internal/tspath"
+)
+
+func TestGetWildcardDirectories_NonASCIICharacters(t *testing.T) {
+	t.Parallel()
+
+	tests := []struct {
+		name                      string
+		include                   []string
+		exclude                   []string
+		currentDirectory          string
+		useCaseSensitiveFileNames bool
+	}{
+		{
+			name:                      "Norwegian character æ in path",
+			include:                   []string{"src/**/*.test.ts", "src/**/*.stories.ts", "src/**/*.mdx"},
+			exclude:                   []string{"node_modules"},
+			currentDirectory:          "C:/Users/TobiasLægreid/dev/app/frontend/packages/react",
+			useCaseSensitiveFileNames: false,
+		},
+		{
+			name:                      "Japanese characters in path",
+			include:                   []string{"src/**/*.ts"},
+			exclude:                   []string{"テスト"},
+			currentDirectory:          "/Users/ユーザー/プロジェクト",
+			useCaseSensitiveFileNames: true,
+		},
+		{
+			name:                      "Chinese characters in path",
+			include:                   []string{"源代码/**/*.js"},
+			exclude:                   []string{"节点模块"},
+			currentDirectory:          "/home/用户/项目",
+			useCaseSensitiveFileNames: true,
+		},
+		{
+			name:                      "Various Unicode characters",
+			include:                   []string{"src/**/*.ts"},
+			exclude:                   []string{"node_modules"},
+			currentDirectory:          "/Users/Müller/café/naïve/résumé",
+			useCaseSensitiveFileNames: false,
+		},
+	}
+
+	for _, tt := range tests {
+		t.Run(tt.name, func(t *testing.T) {
+			t.Parallel()
+
+			comparePathsOptions := tspath.ComparePathsOptions{
+				CurrentDirectory:          tt.currentDirectory,
+				UseCaseSensitiveFileNames: tt.useCaseSensitiveFileNames,
+			}
+
+			result := getWildcardDirectories(tt.include, tt.exclude, comparePathsOptions)
+
+			if result == nil {
+				t.Fatalf("expected non-nil result")
+			}
+		})
+	}
+}
diff --git a/internal/vfs/utilities.go b/internal/vfs/utilities.go
index cf0e0e118..5b9d1ff25 100644
--- a/internal/vfs/utilities.go
+++ b/internal/vfs/utilities.go
@@ -83,11 +83,11 @@ func IsImplicitGlob(lastPathComponent string) bool {
 	return !strings.ContainsAny(lastPathComponent, ".*?")
 }
 
-// Reserved characters, forces escaping of any non-word (or digit), non-whitespace character.
-// It may be inefficient (we could just match (/[-[\]{}()*+?.,\\^$|#\s]/g), but this is future
-// proof.
+// Reserved characters - only escape actual regex metacharacters.
+// Go's regexp doesn't support \x escape sequences for arbitrary characters,
+// so we only escape characters that have special meaning in regex.
 var (
-	reservedCharacterPattern *regexp.Regexp = regexp.MustCompile(`[^\w\s/]`)
+	reservedCharacterPattern *regexp.Regexp = regexp.MustCompile(`[\\.\+*?()\[\]{}^$|#]`)
 	wildcardCharCodes                       = []rune{'*', '?'}
 )
 
-- 
2.50.1 (Apple Git-155)

